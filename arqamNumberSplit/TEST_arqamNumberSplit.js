import {arqamNumberSplit} from './arqamNumberSplit.js'

testCase1();
//=========================================
//             Test Code
//=========================================
function testCase1() {
var r=0; // test tracker
r |= test(1.956  ,2 , ['1' ,'96'    ]);
r |= test(1.956  ,1 , ["1" ,"9"     ]);
r |= test(1.956  ,3 , ["1" ,"956"   ]);
r |= test(1.1    ,2 , ["1" ,"10"    ]);
r |= test(1.1    ,3 , ["1" ,"100"   ]);
r |= test(1.456  ,2 , ["1" ,"46"    ]);
r |= test(1.456  ,1 , ["1" ,"5"     ]);
r |= test(1.456  ,3 , ["1" ,"456"   ]);
r |= test(1.1    ,3 , ["1" ,"100"   ]);
r |= test(1.5    ,2 , ["1" ,"50"    ]);
r |= test(1.9    ,2 , ["1" ,"90"    ]);
r |= test(1.9    ,3 , ["1" ,"900"   ]);
r |= test(1.999  ,3 , ["1" ,"999"   ]);
r |= test(1.998  ,2 , ["1" ,"99"    ]);
r |= test(1.975  ,1 , ["1" ,"9"     ]);
r |= test(1.999  ,6 , ["1" ,"999000"]);
r |= test(1.999  ,6 , ["1" ,"999000"]);
r |= test(1.799  ,5 , ["1" ,"79900" ]);
r |= test(1.9888 ,2 , ["1" ,"99"    ]);
r |= test(1.238  ,2 , ["1" ,"24"    ]);
r |= test(1      ,2 , ["1" ,""      ]);
r |= test(0      ,2 , ["" ,""       ]);
r |= test(0      ,0 , ["" ,""       ]);
r |= test(0.32   ,2 , ["" ,"32"     ]);
r |= test(0.32   ,3 , ["" ,"320"    ]);
r |= test(22.99  ,0 , ["22",""      ]);
r |= test(1234567.12345     , 3 , ["1234567" ,"123"]);
r |= test(1234567.12345     ,-1 , ["1234567" ,"12345"]);
r |= test(1234567.12345678  ,-1 , ["1234567" ,"12345678"]);
r |= test(0.12345678  ,-1 , ["" ,"12345678"]);
r |= test(123  ,-1 , ["123" ,""]);
r |= test(123.0,-1 , ["123" ,""]);
r |= test(0.0,-1 , ["" ,""]);
r |= test(0.12345,-1 , ["" ,"12345"]);
r |= test("0.12345",-1 , ["" ,"12345"]);
r |= test("100100.23",3 , ["100100" ,"230"]);


if (r==0) console.log("Test Case Passed.");
}
//------------------
function test(param1,param2,should) {
let result = arqamNumberSplit(param1,param2);
if (result[0] !== should[0] || result[1] !== should[1]) {
console.log(`${param1} Output   : ${result}\n${param1} Should be: ${should}`);return 1;}
}
